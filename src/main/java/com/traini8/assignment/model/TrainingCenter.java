package com.traini8.assignment.model;

import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import java.util.List;

@Document(collection = "centers") // document name as stored in the mongodb database
public class TrainingCenter {

    // centerName should be less than 40 characters long and should not be blank.
    @NotBlank(message = "CenterName is required")
    @Size(max=40, message = "CenterName must be less than 40 characters")
    private String centerName;

    // centerCode is the Primary Key. It should be exactly 12 characters long and must be alphanumeric.
    @Id
    @NotBlank(message = "CenterCode is required")
    @Pattern(regexp = "^[a-zA-Z0-9]{12}$", message ="CenterCode must be exactly 12 alphanumeric characters")
    private String centerCode;

    // address object will store the detailedAddress, city, state and pincode. It is mandatory for input.
    private Address address;

    // total capacity of students in the Training Center
    private int studentCapacity;

    // List of Courses offered by the Training Center
    private List<String> coursesOffered;

    // Email address of Training Center. It should be valid. It is optional for input.
    @Email(message = "Invalid email format")
    private String contactEmail;

    // Phone number of Training Center. It should be valid 10-digit number. It is mandatory for input.
    @NotBlank(message = "ContactPhone is required")
    @Pattern(regexp = "^\\d{10}$", message = "ContactPhone must be a valid 10-digit phone number")
    private String contactPhone;

    // Epoch time generated by the system, not by the user.
    private long epochTime;

    // constructors

    public TrainingCenter(){}

    public TrainingCenter(long epochTime, String centerName, String centerCode, Address address, int studentCapacity, List<String> coursesOffered, String contactEmail, String contactPhone) {
        this.epochTime = epochTime;
        this.centerName = centerName;
        this.centerCode = centerCode;
        this.address = address;
        this.studentCapacity = studentCapacity;
        this.coursesOffered = coursesOffered;
        this.contactEmail = contactEmail;
        this.contactPhone = contactPhone;
    }

    // getters and setters

    public String getCenterName() {
        return centerName;
    }

    public void setCenterName(String centerName) {
        this.centerName = centerName;
    }

    public String getCenterCode() {
        return centerCode;
    }

    public void setCenterCode(String centerCode) {
        this.centerCode = centerCode;
    }

    public Address getAddress() {
        return address;
    }

    public void setAddress(Address address) {
        this.address = address;
    }

    public int getStudentCapacity() {
        return studentCapacity;
    }

    public void setStudentCapacity(int studentCapacity) {
        this.studentCapacity = studentCapacity;
    }

    public List<String> getCoursesOffered() {
        return coursesOffered;
    }

    public void setCoursesOffered(List<String> coursesOffered) {
        this.coursesOffered = coursesOffered;
    }

    public String getContactEmail() {
        return contactEmail;
    }

    public void setContactEmail(String contactEmail) {
        this.contactEmail = contactEmail;
    }

    public String getContactPhone() {
        return contactPhone;
    }

    public void setContactPhone(String contactPhone) {
        this.contactPhone = contactPhone;
    }

    public long getEpochTime() {
        return epochTime;
    }

    public void setEpochTime(long epochTime) {
        this.epochTime = epochTime;
    }

    // toString() method

    @Override
    public String toString() {
        return "TrainingCenter{" +
                "centerName='" + centerName + '\'' +
                ", centerCode='" + centerCode + '\'' +
                ", address=" + address +
                ", studentCapacity=" + studentCapacity +
                ", coursesOffered=" + coursesOffered +
                ", contactEmail='" + contactEmail + '\'' +
                ", contactPhone='" + contactPhone + '\'' +
                ", epochTime=" + epochTime +
                '}';
    }
}


